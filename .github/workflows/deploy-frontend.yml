name: Deploy BookingBite Frontend (Inline, Uses Server Env)

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/**"
      - "public/**"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/deploy-frontend.yml"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: bookingbite-frontend-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: [self-hosted, windows, iis, bookingbite, frontend]
    timeout-minutes: 45
    defaults:
      run:
        shell: powershell

    env:
      # Corporate proxy/CA bundle (if applicable to your server)
      HTTPS_PROXY: http://proxy.hlag.com:11009
      HTTP_PROXY: http://proxy.hlag.com:11009
      NO_PROXY: 127.0.0.1,localhost,*.hlag.com
      NODE_EXTRA_CA_CERTS: C:\certs\corp-bundle.pem
      REQUESTS_CA_BUNDLE: C:\certs\corp-bundle.pem
      SSL_CERT_FILE: C:\certs\corp-bundle.pem
      NPM_CONFIG_STRICT_SSL: "false"
      NPM_CONFIG_PROXY: http://proxy.hlag.com:11009
      NPM_CONFIG_HTTPS_PROXY: http://proxy.hlag.com:11009
      NPM_CONFIG_REGISTRY: https://registry.npmjs.org/

    steps:
      - name: Start log
        run: |
          Write-Output "=== BookingBite Frontend deploy started: $(Get-Date) ==="

      # Build exactly where your manual script builds, so the same
      # .env.production.local and local config are used.
      - name: Update repo on server
        run: |
          Set-Location -Path "C:\deployments\bbclient"
          git --version
          git remote -v
          git fetch origin
          git reset --hard origin/main

      - name: Install dependencies (server Node/npm)
        run: |
          Set-Location -Path "C:\deployments\bbclient"
          node -v
          npm -v
          if (Test-Path package-lock.json) {
            npm ci --no-audit --no-fund
          } else {
            npm install --include=dev --no-audit --no-fund --legacy-peer-deps
          }
          # Silence CRA/babel warning that can break CI unpredictably
          if (-not (Test-Path "node_modules\@babel\plugin-proposal-private-property-in-object")) {
            npm install -D @babel/plugin-proposal-private-property-in-object --no-audit --no-fund --legacy-peer-deps
          }

      - name: Build (donâ€™t fail on ESLint warnings in CI)
        run: |
          Set-Location -Path "C:\deployments\bbclient"
          if (Test-Path Env:CI) { Remove-Item Env:CI -ErrorAction SilentlyContinue }
          $env:DISABLE_ESLINT_PLUGIN = "true"
          npm run build
          if (!(Test-Path ".\build\index.html")) {
            throw "Build failed: build\index.html not found"
          }

      - name: Deploy to IIS site root
        run: |
          $deploy = 'C:\inetpub\wwwroot\bookingbite'
          if (!(Test-Path $deploy)) { New-Item -ItemType Directory -Path $deploy | Out-Null }
          # keep web.config; wipe everything else
          Get-ChildItem $deploy | Where-Object { $_.Name -ne 'web.config' } | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue
          # copy new build from the server build directory
          Copy-Item -Path "C:\deployments\bbclient\build\*" -Destination $deploy -Recurse -Force

      - name: Sanity checks (index + static + API URL present)
        run: |
          $deploy = 'C:\inetpub\wwwroot\bookingbite'
          $index = Join-Path $deploy 'index.html'
          if (!(Test-Path $index)) { throw "Deploy failed: index.html missing in $deploy" }
          if (!(Test-Path (Join-Path $deploy 'static'))) { throw "Deploy failed: static folder missing in $deploy" }
          Write-Output "Deploy OK -> $deploy"

          # Optional: try to detect the baked API base URL in the compiled bundle
          $bundle = Get-ChildItem (Join-Path $deploy 'static\js') -Filter "main*.js" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if ($bundle) {
            Write-Output "Inspecting bundle: $($bundle.FullName)"
            Select-String -Path $bundle.FullName -Pattern 'REACT_APP_API_URL|/booking/week|/api/' -SimpleMatch -Encoding UTF8 | Select-Object -First 10 | ForEach-Object { $_.Line } 
          } else {
            Write-Warning "Could not find main*.js to inspect"
          }

      - name: End log
        run: |
          Write-Output "=== BookingBite Frontend deploy finished: $(Get-Date) ==="
