name: Deploy BookingBite Frontend (Self-Contained, Windows PS)

on:
  push:
    branches: [ "main" ]
    paths:
      - "src/**"
      - "public/**"
      - "package.json"
      - "package-lock.json"
      - ".github/workflows/deploy-frontend.yml"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: bookingbite-frontend-prod
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: [self-hosted, windows, iis, bookingbite, frontend]
    timeout-minutes: 45
    defaults:
      run:
        shell: powershell   # <-- use Windows PowerShell (pwsh not required)

    env:
      HTTPS_PROXY: http://proxy.hlag.com:11009
      HTTP_PROXY: http://proxy.hlag.com:11009
      NO_PROXY: 127.0.0.1,localhost,*.hlag.com
      NODE_EXTRA_CA_CERTS: C:\certs\corp-bundle.pem
      REQUESTS_CA_BUNDLE: C:\certs\corp-bundle.pem
      SSL_CERT_FILE: C:\certs\corp-bundle.pem
      NPM_CONFIG_STRICT_SSL: "false"
      NPM_CONFIG_PROXY: http://proxy.hlag.com:11009
      NPM_CONFIG_HTTPS_PROXY: http://proxy.hlag.com:11009
      NPM_CONFIG_REGISTRY: https://registry.npmjs.org/

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 18 (with npm cache)
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: Verify node/npm
        run: |
          node -v
          npm -v

      - name: Configure npm proxy/registry (.npmrc)
        run: |
          $content = @"
          proxy=$env:HTTPS_PROXY
          https-proxy=$env:HTTPS_PROXY
          strict-ssl=false
          registry=https://registry.npmjs.org/
          "@
          $file = Join-Path $env:GITHUB_WORKSPACE '.npmrc'
          Set-Content -Path $file -Value $content -Encoding Ascii
          Get-Content $file

      - name: Bring in production env (or set safe fallback)
        run: |
          $envSource = 'C:\deployments\env\bookingbite\.env.production.local'
          if (Test-Path $envSource) {
            Copy-Item $envSource -Destination "$env:GITHUB_WORKSPACE\.env.production.local" -Force
            Write-Output "Loaded .env.production.local from $envSource"
          } else {
            Write-Warning "No .env.production.local at $envSource; falling back to REACT_APP_API_URL=/api/"
            $env:REACT_APP_API_URL = "/api/"
          }

      - name: Install dependencies
        run: |
          if (Test-Path package-lock.json) {
            npm ci --no-audit --no-fund
          } else {
            npm install --include=dev --no-audit --no-fund --legacy-peer-deps
          }

      - name: Ensure Babel plugin present (silence CRA/babel warning)
        run: |
          if (-not (Test-Path "node_modules\@babel\plugin-proposal-private-property-in-object")) {
            npm install -D @babel/plugin-proposal-private-property-in-object --no-audit --no-fund --legacy-peer-deps
          }

      - name: Build (donâ€™t treat warnings as errors)
        run: |
          if (Test-Path Env:CI) { Remove-Item Env:CI -ErrorAction SilentlyContinue }
          $env:DISABLE_ESLINT_PLUGIN = "true"
          npm run build
          if (!(Test-Path "$env:GITHUB_WORKSPACE\build\index.html")) {
            throw "Build failed: build\index.html not found"
          }

      - name: Deploy to IIS site root
        run: |
          $deploy = 'C:\inetpub\wwwroot\bookingbite'
          if (!(Test-Path $deploy)) { New-Item -ItemType Directory -Path $deploy | Out-Null }
          # keep web.config; wipe everything else
          Get-ChildItem $deploy | Where-Object { $_.Name -ne 'web.config' } | Remove-Item -Recurse -Force -ErrorAction SilentlyContinue
          # copy new build
          Copy-Item -Path (Join-Path $env:GITHUB_WORKSPACE 'build\*') -Destination $deploy -Recurse -Force

      - name: Sanity check deployed files
        run: |
          $deploy = 'C:\inetpub\wwwroot\bookingbite'
          if (!(Test-Path (Join-Path $deploy 'index.html'))) { throw "Deploy failed: index.html missing in $deploy" }
          if (!(Test-Path (Join-Path $deploy 'static'))) { throw "Deploy failed: static folder missing in $deploy" }
          Write-Output "Deploy OK -> $deploy"
